// <auto-generated />
using System;
using Collectium.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Collectium.Migrations
{
    [DbContext(typeof(CollectiumDBContext))]
    [Migration("20231027165732_two")]
    partial class two
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Collectium.Model.Entity.AccountDistribution", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("Dpd")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<int?>("DpdMax")
                        .HasColumnType("int")
                        .HasColumnName("dpd_max");

                    b.Property<int?>("DpdMin")
                        .HasColumnType("int")
                        .HasColumnName("dpd_min");

                    b.Property<int?>("MaxPtp")
                        .HasColumnType("int")
                        .HasColumnName("max_ptp");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("account_distribution");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AccountDistributionRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AccountDistributionId")
                        .HasColumnType("int")
                        .HasColumnName("account_distribution_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("Dpd")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<int?>("DpdMax")
                        .HasColumnType("int")
                        .HasColumnName("dpd_max");

                    b.Property<int?>("DpdMin")
                        .HasColumnType("int")
                        .HasColumnName("dpd_min");

                    b.Property<int?>("MaxPtp")
                        .HasColumnType("int")
                        .HasColumnName("max_ptp");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("AccountDistributionId");

                    b.HasIndex("StatusId");

                    b.ToTable("account_distribution_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Action", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("ActCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("ActDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("act_desc");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("action");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionGroup", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("action_group");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionGroupRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ActionGroupId")
                        .HasColumnType("int")
                        .HasColumnName("action_group_id");

                    b.Property<int?>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ActionGroupId");

                    b.HasIndex("ActionId");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("action_group_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("ActCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("ActDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("act_desc");

                    b.Property<int?>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("approve_date");

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("action_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AgentDistribution", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("DistId")
                        .HasColumnType("int")
                        .HasColumnName("dist_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("DistId");

                    b.HasIndex("UserId");

                    b.ToTable("agent_dist");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Area", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("area");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AreaRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adesc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BranchId");

                    b.HasIndex("StatusId");

                    b.ToTable("area_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AlasanLelangId")
                        .HasColumnType("int")
                        .HasColumnName("alasan_lelang_id");

                    b.Property<int?>("BalaiLelangId")
                        .HasColumnType("int")
                        .HasColumnName("balai_lelang_id");

                    b.Property<double?>("BiayaLelang")
                        .HasColumnType("float")
                        .HasColumnName("biaya_lelang");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_id");

                    b.Property<int?>("BranchPembukuanId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_pembukuan_id");

                    b.Property<int?>("BranchProsesId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_proses_id");

                    b.Property<string>("CatatanLelang")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("catatan_lelang");

                    b.Property<int?>("JenisLelangId")
                        .HasColumnType("int")
                        .HasColumnName("jenis_lelang_id");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("keterangan");

                    b.Property<int?>("LastUpadteById")
                        .HasColumnType("int")
                        .HasColumnName("last_update_id");

                    b.Property<DateTime?>("LastUpadteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update_date");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<string>("NamaRekening")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nama_rekening");

                    b.Property<double?>("NilaiLimitLelang")
                        .HasColumnType("float")
                        .HasColumnName("nilai_limit_lelang");

                    b.Property<string>("NoPK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_pk");

                    b.Property<string>("NoRekening")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_rekening");

                    b.Property<string>("ObjekLelang")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("objek_lelang");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TataCaraLelang")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tata_cara_lelang");

                    b.Property<DateTime?>("TglPenetapanLelang")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_penetapan_lelang");

                    b.Property<double?>("UangJaminan")
                        .HasColumnType("float")
                        .HasColumnName("uang_jaminan");

                    b.HasKey("Id");

                    b.HasIndex("AlasanLelangId");

                    b.HasIndex("BalaiLelangId");

                    b.HasIndex("BranchId");

                    b.HasIndex("BranchPembukuanId");

                    b.HasIndex("BranchProsesId");

                    b.HasIndex("JenisLelangId");

                    b.HasIndex("LastUpadteById");

                    b.HasIndex("LoanId");

                    b.HasIndex("StatusId");

                    b.ToTable("auction");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionApproval", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("ExecutionId")
                        .HasColumnType("int")
                        .HasColumnName("execution_id");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_id");

                    b.Property<int?>("RecipientRoleId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_role_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<int?>("SenderRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sender_role_id");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("ExecutionId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("RecipientRoleId");

                    b.HasIndex("SenderId");

                    b.HasIndex("SenderRoleId");

                    b.ToTable("auction_approval");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentAuctionId")
                        .HasColumnType("int")
                        .HasColumnName("doc_type_id");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("DocumentAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("auction_document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionResultDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentResultAuctionId")
                        .HasColumnType("int")
                        .HasColumnName("doc_type_id");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("DocumentResultAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("auction_result_document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Ayda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_id");

                    b.Property<int?>("BranchPembukuanId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_pembukuan_id");

                    b.Property<int?>("BranchProsesId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_proses_id");

                    b.Property<int?>("HubunganBankId")
                        .HasColumnType("int")
                        .HasColumnName("hubungan_bank_id");

                    b.Property<double?>("JumlahAyda")
                        .HasColumnType("float")
                        .HasColumnName("jumlah_ayda");

                    b.Property<string>("Kualitas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kualitas");

                    b.Property<int?>("LastUpadteById")
                        .HasColumnType("int")
                        .HasColumnName("last_update_id");

                    b.Property<DateTime?>("LastUpadteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update_date");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<double?>("NilaiMargin")
                        .HasColumnType("float")
                        .HasColumnName("nilai_margin");

                    b.Property<double?>("NilaiPembiayaanPokok")
                        .HasColumnType("float")
                        .HasColumnName("nilai_pembiayaan_pokok");

                    b.Property<double?>("NilaiPerolehanAgunan")
                        .HasColumnType("float")
                        .HasColumnName("nilai_perolehan_agunan");

                    b.Property<double?>("PerkiraanBiayaPenjualan")
                        .HasColumnType("float")
                        .HasColumnName("perkiraan_biaya_jual");

                    b.Property<double?>("Ppa")
                        .HasColumnType("float")
                        .HasColumnName("ppa");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("TglAmbilAlih")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_ambil_alih");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("BranchPembukuanId");

                    b.HasIndex("BranchProsesId");

                    b.HasIndex("HubunganBankId");

                    b.HasIndex("LastUpadteById");

                    b.HasIndex("LoanId");

                    b.HasIndex("StatusId");

                    b.ToTable("ayda");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AydaApproval", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AydaId")
                        .HasColumnType("int")
                        .HasColumnName("ayda_id");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("ExecutionId")
                        .HasColumnType("int")
                        .HasColumnName("execution_id");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_id");

                    b.Property<int?>("RecipientRoleId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_role_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<int?>("SenderRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sender_role_id");

                    b.HasKey("Id");

                    b.HasIndex("AydaId");

                    b.HasIndex("ExecutionId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("RecipientRoleId");

                    b.HasIndex("SenderId");

                    b.HasIndex("SenderRoleId");

                    b.ToTable("ayda_approval");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AydaDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AydaId")
                        .HasColumnType("int")
                        .HasColumnName("ayda_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentAydaId")
                        .HasColumnType("int")
                        .HasColumnName("doc_type_id");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AydaId");

                    b.HasIndex("DocumentAydaId");

                    b.HasIndex("UserId");

                    b.ToTable("ayda_document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Branch", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Addr1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr1");

                    b.Property<string>("Addr2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr2");

                    b.Property<string>("Addr3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr3");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<int?>("BranchTypeId")
                        .HasColumnType("int")
                        .HasColumnName("branch_type_id");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Norek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("norek");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("Pic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pic");

                    b.Property<int?>("ProductSegmentId")
                        .HasColumnType("int")
                        .HasColumnName("prd_segment_id");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("zipcode");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BranchTypeId");

                    b.HasIndex("ProductSegmentId");

                    b.HasIndex("StatusId");

                    b.ToTable("branch");
                });

            modelBuilder.Entity("Collectium.Model.Entity.BranchRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Addr1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr1");

                    b.Property<string>("Addr2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr2");

                    b.Property<string>("Addr3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("addr3");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<int?>("BranchCcoId")
                        .HasColumnType("int")
                        .HasColumnName("branch_cco_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("BranchTypeId")
                        .HasColumnType("int")
                        .HasColumnName("branch_type_id");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Norek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("norek");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("Pic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pic");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("zipcode");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BranchCcoId");

                    b.HasIndex("BranchId");

                    b.HasIndex("BranchTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("branch_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.BranchType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("branch_type");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CollectionCallId")
                        .HasColumnType("int")
                        .HasColumnName("call_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone_no");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("CollectionCallId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("call_request");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallResult", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("rl_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rl_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<int?>("isDC")
                        .HasColumnType("int")
                        .HasColumnName("is_dc");

                    b.Property<int?>("isFC")
                        .HasColumnType("int")
                        .HasColumnName("is_fc");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfresult");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallScript", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AccdMax")
                        .HasColumnType("int")
                        .HasColumnName("accd_max");

                    b.Property<int?>("AccdMin")
                        .HasColumnType("int")
                        .HasColumnName("accd_min");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("CsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cs_desc");

                    b.Property<string>("CsScript")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cs_script");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("call_script");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallScriptRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AccdMax")
                        .HasColumnType("int")
                        .HasColumnName("accd_max");

                    b.Property<int?>("AccdMin")
                        .HasColumnType("int")
                        .HasColumnName("accd_min");

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<int?>("CallScriptId")
                        .HasColumnType("int")
                        .HasColumnName("call_script_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("CsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cs_desc");

                    b.Property<string>("CsScript")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cs_script");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("CallScriptId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("call_script_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.City", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("KodeWilSikp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kode_wil_sikp");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("ProvinsiId")
                        .HasColumnType("int")
                        .HasColumnName("provinsi_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ProvinsiId");

                    b.HasIndex("StatusId");

                    b.ToTable("rfkabupaten");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionAddContact", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("acc_no");

                    b.Property<string>("AddAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("add_address");

                    b.Property<int?>("AddById")
                        .HasColumnType("int")
                        .HasColumnName("add_by");

                    b.Property<string>("AddCity")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("add_city");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime")
                        .HasColumnName("add_date");

                    b.Property<string>("AddFrom")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("add_from");

                    b.Property<string>("AddId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("add_id");

                    b.Property<string>("AddPhone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("add_phone");

                    b.Property<string>("CuCif")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cu_cif");

                    b.Property<int?>("Default")
                        .HasColumnType("int")
                        .HasColumnName("def");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.HasKey("Id");

                    b.HasIndex("AddById");

                    b.ToTable("collection_add_contact");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionCall", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("acc_no");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<double?>("CallAmount")
                        .HasColumnType("float")
                        .HasColumnName("call_amount");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<DateTime?>("CallDate")
                        .HasColumnType("datetime")
                        .HasColumnName("call_date");

                    b.Property<string>("CallName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("call_name");

                    b.Property<string>("CallNotes")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("call_notes");

                    b.Property<DateTime?>("CallResultDate")
                        .HasColumnType("datetime")
                        .HasColumnName("call_result_date");

                    b.Property<string>("CallResultHh")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("call_result_hh");

                    b.Property<string>("CallResultHhmm")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("call_result_hhmm");

                    b.Property<int?>("CallResultId")
                        .HasColumnType("int")
                        .HasColumnName("call_result_id");

                    b.Property<string>("CallResultMm")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("call_result_mm");

                    b.Property<int?>("CollectionAddId")
                        .HasColumnType("int")
                        .HasColumnName("add_id");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<int?>("ReasonId")
                        .HasColumnType("int")
                        .HasColumnName("call_reason");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CallById");

                    b.HasIndex("CallResultId");

                    b.HasIndex("CollectionAddId");

                    b.HasIndex("LoanId")
                        .IsUnique()
                        .HasFilter("[loan_id] IS NOT NULL");

                    b.HasIndex("ReasonId");

                    b.ToTable("collection_call");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionContactPhoto", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CollectionContactId")
                        .HasColumnType("int")
                        .HasColumnName("coll_contact_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("CollectionContactId");

                    b.HasIndex("UserId");

                    b.ToTable("collection_contact_photo");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionHistory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("acc_no");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<int?>("CallId")
                        .HasColumnType("int")
                        .HasColumnName("call_id");

                    b.Property<string>("CallResultHh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallResultHhmm")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("call_result_hhmm");

                    b.Property<string>("CallResultMm")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("call_result_mm");

                    b.Property<string>("CbmId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cbm_id");

                    b.Property<int?>("CollectionAddId")
                        .HasColumnType("int")
                        .HasColumnName("add_id");

                    b.Property<int?>("DPD")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<int?>("HistoryById")
                        .HasColumnType("int")
                        .HasColumnName("history_by");

                    b.Property<DateTime?>("HistoryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("history_date");

                    b.Property<string>("Kolek")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kolek");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("note");

                    b.Property<string>("Picture")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("picture");

                    b.Property<int?>("ReasonId")
                        .HasColumnType("int")
                        .HasColumnName("reason");

                    b.Property<DateTime?>("ResultDate")
                        .HasColumnType("datetime")
                        .HasColumnName("result_date");

                    b.Property<int?>("ResultId")
                        .HasColumnType("int")
                        .HasColumnName("result");

                    b.Property<string>("UbmId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ubm_id");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CallById");

                    b.HasIndex("CallId");

                    b.HasIndex("CollectionAddId");

                    b.HasIndex("HistoryById");

                    b.HasIndex("ReasonId");

                    b.HasIndex("ResultId");

                    b.ToTable("collection_history");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionPhoto", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CollectionHistoryId")
                        .HasColumnType("int")
                        .HasColumnName("collhistory_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("CollectionHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("collection_photo");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionTrace", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("acc_no");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<int?>("CallId")
                        .HasColumnType("int")
                        .HasColumnName("call_id");

                    b.Property<int?>("DPD")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<int?>("Kolek")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("kolek");

                    b.Property<int?>("ResultId")
                        .HasColumnType("int")
                        .HasColumnName("result");

                    b.Property<DateTime?>("TraceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("trace_date");

                    b.HasKey("Id");

                    b.HasIndex("CallById");

                    b.HasIndex("CallId");

                    b.HasIndex("ResultId");

                    b.ToTable("collection_trace");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionVisit", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("acc_no");

                    b.Property<string>("AddId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("add_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("CbmId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cbm_id");

                    b.Property<string>("Kolek")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kolek");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<string>("Picture")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("picture");

                    b.Property<string>("UbmId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ubm_id");

                    b.Property<double?>("VisitAmount")
                        .HasColumnType("float")
                        .HasColumnName("visit_amount");

                    b.Property<int?>("VisitById")
                        .HasColumnType("int")
                        .HasColumnName("visit_by");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime")
                        .HasColumnName("visit_date");

                    b.Property<string>("VisitId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("visit_id");

                    b.Property<string>("VisitName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("visit_name");

                    b.Property<string>("VisitNotes")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("visit_note");

                    b.Property<string>("VisitReason")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("visit_reason");

                    b.Property<DateTime?>("VisitResultDate")
                        .HasColumnType("datetime")
                        .HasColumnName("visit_result_date");

                    b.Property<int?>("VisitResultId")
                        .HasColumnType("int")
                        .HasColumnName("visit_result");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("VisitById");

                    b.HasIndex("VisitResultId");

                    b.ToTable("collection_visit");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Counter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("Ctr")
                        .HasColumnType("int")
                        .HasColumnName("ctr");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("counter_type");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("StatusId");

                    b.ToTable("counter");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Customer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("cu_address");

                    b.Property<DateTime?>("BornDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cu_borndate");

                    b.Property<string>("BornPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cu_bornplace");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("Cif")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cu_cif");

                    b.Property<string>("CityData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("cu_city");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cu_company");

                    b.Property<string>("CuIncome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cu_income");

                    b.Property<int?>("CustomerOccupationId")
                        .HasColumnType("int")
                        .HasColumnName("cu_occupation");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("cu_custtype");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cu_email");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("cu_gender");

                    b.Property<string>("HmPhone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cu_hmphone");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("int")
                        .HasColumnName("cu_idtype");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cu_idnumber");

                    b.Property<int?>("IncomeTypeId")
                        .HasColumnType("int")
                        .HasColumnName("cu_incometype");

                    b.Property<string>("Jabatan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jabatan");

                    b.Property<string>("KecamatanData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kecamatan");

                    b.Property<int?>("KecamatanId")
                        .HasColumnType("int")
                        .HasColumnName("cu_kecamatan");

                    b.Property<string>("KelurahanData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kelurahan");

                    b.Property<int?>("KelurahanId")
                        .HasColumnType("int")
                        .HasColumnName("cu_kelurahan");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int")
                        .HasColumnName("cu_maritalstatus");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cu_mobilephone");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cu_name");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int")
                        .HasColumnName("cu_nationality");

                    b.Property<string>("Pekerjaan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pekerjaan");

                    b.Property<string>("ProvinsiData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provinsi");

                    b.Property<int?>("ProvinsiId")
                        .HasColumnType("int")
                        .HasColumnName("cu_provinsi");

                    b.Property<string>("Rt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cu_rt");

                    b.Property<string>("Rw")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cu_rw");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cu_zipcode");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerOccupationId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("IdTypeId");

                    b.HasIndex("IncomeTypeId");

                    b.HasIndex("KecamatanId");

                    b.HasIndex("KelurahanId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ProvinsiId");

                    b.ToTable("master_customer");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CustomerOccupation", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfoccupation");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CustomerType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfcustomertype");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DistributionRule", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<int?>("DpdMax")
                        .HasColumnType("int")
                        .HasColumnName("dpd_max");

                    b.Property<int?>("DpdMin")
                        .HasColumnType("int")
                        .HasColumnName("dpd_min");

                    b.Property<int?>("KolMax")
                        .HasColumnType("int")
                        .HasColumnName("kol_max");

                    b.Property<int?>("KolMin")
                        .HasColumnType("int")
                        .HasColumnName("kol_min");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<double?>("TunggakanMax")
                        .HasColumnType("float")
                        .HasColumnName("tungg_max");

                    b.Property<double?>("TunggakanMin")
                        .HasColumnType("float")
                        .HasColumnName("tungg_min");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StatusId");

                    b.ToTable("distr_rule");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentSignature", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("doc_code");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("doc_name");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("doc_signature");
                });

            modelBuilder.Entity("Collectium.Model.Entity.FcMappingMikroColl", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("FcId")
                        .HasColumnType("int")
                        .HasColumnName("fc_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("FcId");

                    b.HasIndex("StatusId");

                    b.ToTable("fc_mapping_mikro_collection");
                });

            modelBuilder.Entity("Collectium.Model.Entity.FcMappingMikroCollRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("FcId")
                        .HasColumnType("int")
                        .HasColumnName("fc_id");

                    b.Property<int?>("FcMappingMikroCollId")
                        .HasColumnType("int")
                        .HasColumnName("fc_mapping_mikro_collection_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("FcId");

                    b.HasIndex("FcMappingMikroCollId");

                    b.HasIndex("StatusId");

                    b.ToTable("fc_mapping_mikro_collection_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Gender", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfgender");
                });

            modelBuilder.Entity("Collectium.Model.Entity.GenerateLetter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Cabang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cabang");

                    b.Property<string>("CabangAlamat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("cabang_alamat");

                    b.Property<string>("CabangFaks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cabang_faks");

                    b.Property<string>("CabangKota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cabang_kota");

                    b.Property<string>("CabangTelp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cabang_telepon");

                    b.Property<string>("Jumlah")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("jumlah");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<string>("NamaNasabah")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nama_nasabah");

                    b.Property<string>("No")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("no");

                    b.Property<string>("NoKredit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("no_kredit");

                    b.Property<string>("NoSP1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("no_sp1");

                    b.Property<string>("NoSP2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("no_sp2");

                    b.Property<string>("Notaris")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notaris");

                    b.Property<string>("NotarisDi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notaris_di");

                    b.Property<string>("NotarisTgl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notaris_tgl");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Tanggal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tgl");

                    b.Property<string>("TanggalBayar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tgl_bayar");

                    b.Property<string>("TanggalKredit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tgl_kredit");

                    b.Property<string>("Terbilang")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("terbilang");

                    b.Property<string>("TglSp1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tgl_sp1");

                    b.Property<string>("TglSp2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tgl_sp2");

                    b.Property<string>("TypeLetter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type_letter");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("StatusId");

                    b.ToTable("generate_letter");
                });

            modelBuilder.Entity("Collectium.Model.Entity.GenericParameter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("generic_param");

                    b.HasDiscriminator<string>("Type").HasValue("GenericParameter");
                });

            modelBuilder.Entity("Collectium.Model.Entity.IdType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("idtype_code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idtype_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfidtype");
                });

            modelBuilder.Entity("Collectium.Model.Entity.IncomeType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfincometype");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AsuransiId")
                        .HasColumnType("int")
                        .HasColumnName("asuransi_id");

                    b.Property<int?>("AsuransiSisaKlaimId")
                        .HasColumnType("int")
                        .HasColumnName("asuransi_sisa_klaim_id");

                    b.Property<double?>("BakiDebitKlaim")
                        .HasColumnType("float")
                        .HasColumnName("baki_debit_klaim");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_id");

                    b.Property<int?>("BranchPembukuanId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_pembukuan_id");

                    b.Property<int?>("BranchProsesId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_proses_id");

                    b.Property<string>("CatatanKlaim")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("catatan_klaim");

                    b.Property<string>("CatatanPolis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("catatan_polis");

                    b.Property<string>("Jabatan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jabatan");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("keterangan");

                    b.Property<int?>("LastUpadteById")
                        .HasColumnType("int")
                        .HasColumnName("last_update_id");

                    b.Property<DateTime?>("LastUpadteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update_date");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<string>("NamaPejabat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nama_pejabat");

                    b.Property<double?>("NilaiKlaim")
                        .HasColumnType("float")
                        .HasColumnName("nilai_klaim");

                    b.Property<double?>("NilaiKlaimDibayar")
                        .HasColumnType("float")
                        .HasColumnName("nilai_klaim_dibayar");

                    b.Property<string>("NoPk")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_pk");

                    b.Property<string>("NoPolis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_polis");

                    b.Property<string>("NoSertifikat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_sertifikat");

                    b.Property<string>("Permasalahan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("permasalahan");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("TglKlaimDibayar")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_klaim_dibayar");

                    b.Property<DateTime?>("TglPolis")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_polis");

                    b.Property<DateTime?>("TglSertifikat")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_sertifikat");

                    b.Property<double?>("TunggakanBunga70Persen")
                        .HasColumnType("float")
                        .HasColumnName("nilai_tunggakan_bunga");

                    b.Property<double?>("TunggakanPokok70Persen")
                        .HasColumnType("float")
                        .HasColumnName("nilai_tunggakan_pokok");

                    b.HasKey("Id");

                    b.HasIndex("AsuransiId");

                    b.HasIndex("AsuransiSisaKlaimId");

                    b.HasIndex("BranchId");

                    b.HasIndex("BranchPembukuanId");

                    b.HasIndex("BranchProsesId");

                    b.HasIndex("LastUpadteById");

                    b.HasIndex("LoanId");

                    b.HasIndex("StatusId");

                    b.ToTable("insurance");
                });

            modelBuilder.Entity("Collectium.Model.Entity.InsuranceApproval", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("ExecutionId")
                        .HasColumnType("int")
                        .HasColumnName("execution_id");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int")
                        .HasColumnName("insurance_id");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_id");

                    b.Property<int?>("RecipientRoleId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_role_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<int?>("SenderRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sender_role_id");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("RecipientRoleId");

                    b.HasIndex("SenderId");

                    b.HasIndex("SenderRoleId");

                    b.ToTable("insurance_approval");
                });

            modelBuilder.Entity("Collectium.Model.Entity.InsuranceDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AydaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentInsuranceId")
                        .HasColumnType("int")
                        .HasColumnName("doc_type_id");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int")
                        .HasColumnName("insurance_id");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AydaId");

                    b.HasIndex("DocumentInsuranceId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("UserId");

                    b.ToTable("insurance_document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Kecamatan", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("kabupaten_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("StatusId");

                    b.ToTable("rfkecamatan");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Kelurahan", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("KdDkcplKelurahan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kd_dkcpl_kelurahan");

                    b.Property<int?>("KecamatanId")
                        .HasColumnType("int")
                        .HasColumnName("kecamatan_id");

                    b.Property<string>("KodePos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kode_pos");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("KecamatanId");

                    b.HasIndex("StatusId");

                    b.ToTable("rfkelurahan");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanBiayaLain", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("NAMA_Biaya_Lain")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_Biaya_Lain");

                    b.Property<double?>("Nominal_Biaya_Lain")
                        .HasColumnType("float")
                        .HasColumnName("Nominal_Biaya_Lain");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<DateTime?>("Tanggal_Biaya_Lain")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_Biaya_Lain");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_BIAYA_LAIN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanKodeAO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("KODE_AO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KODE_AO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<DateTime?>("TANGGAL_AO")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_AO");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_KODEAO");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanKomiteKredit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("KOMITE01")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE01");

                    b.Property<string>("KOMITE02")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE02");

                    b.Property<string>("KOMITE03")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE03");

                    b.Property<string>("KOMITE04")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE04");

                    b.Property<string>("KOMITE05")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE05");

                    b.Property<string>("KOMITE06")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE06");

                    b.Property<string>("NOMOR_PK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_PK");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<DateTime?>("TANGGAL_PK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PK");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_KOMITEKREDIT");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanKSL", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("NAMA_KSL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_KSL");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("Saldo_KSL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Saldo_KSL");

                    b.Property<DateTime?>("Tanggal_KSL")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_KSL");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_KSL");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanPK", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("NAMA_LEGAL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_LEGAL");

                    b.Property<string>("NAMA_NOTARIS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_NOTARIS");

                    b.Property<string>("NOMOR_PK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_PK");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<DateTime?>("TANGGAL_PK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PK");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_PK");
                });

            modelBuilder.Entity("Collectium.Model.Entity.LoanTagihanLain", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("NAMA_TL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_TL");

                    b.Property<double?>("Nominal_TL")
                        .HasColumnType("float")
                        .HasColumnName("Nominal_TL");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<DateTime?>("Tanggal_TL")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_TL");

                    b.Property<int?>("loan_id")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.HasKey("id");

                    b.ToTable("LOAN_TAGIHAN_LAIN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MaritalStatus", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfmarital");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterCollateral", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("ColId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("col_id");

                    b.Property<string>("ColType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("col_type");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<string>("VehBpkbName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("veh_bpkb_name");

                    b.Property<string>("VehBpkbNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("veh_bpkb_no");

                    b.Property<string>("VehBuildYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("veh_build_year");

                    b.Property<string>("VehCc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("veh_cc");

                    b.Property<string>("VehChasisNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("veh_chassis_no");

                    b.Property<string>("VehColor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("veh_color");

                    b.Property<string>("VehEngineNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("veh_engine_no");

                    b.Property<string>("VehMerek")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("veh_merek");

                    b.Property<string>("VehModel")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("veh_model");

                    b.Property<string>("VehPlateNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("veh_plate_no");

                    b.Property<string>("VehStnkNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("veh_stnk_no");

                    b.Property<string>("VehYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("veh_year");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("master_collateral");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterLoan", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("acc_no");

                    b.Property<string>("Ccy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ccy");

                    b.Property<string>("ChannelBranchCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("channel_branch_code");

                    b.Property<string>("Cif")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cu_cif");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("Dpd")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<string>("EconName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("econa_name");

                    b.Property<string>("EconPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("econ_phone");

                    b.Property<string>("EconRelation")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("econ_relation");

                    b.Property<string>("Fasilitas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fasilitas");

                    b.Property<DateTime?>("FileDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("file_date");

                    b.Property<double?>("Installment")
                        .HasColumnType("float")
                        .HasColumnName("installment");

                    b.Property<double?>("InstallmentPokok")
                        .HasColumnType("float")
                        .HasColumnName("installment_pokok");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float")
                        .HasColumnName("interest_rate");

                    b.Property<double?>("KewajibanTotal")
                        .HasColumnType("float")
                        .HasColumnName("kewajiban_total");

                    b.Property<int?>("Kolektibilitas")
                        .HasColumnType("int")
                        .HasColumnName("kolektibilitas");

                    b.Property<DateTime?>("LastPayDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_pay_date");

                    b.Property<string>("LoanNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("loan_number");

                    b.Property<string>("MarketingCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("marketing_code");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime")
                        .HasColumnName("maturity_date");

                    b.Property<double?>("Outstanding")
                        .HasColumnType("float")
                        .HasColumnName("outstanding");

                    b.Property<string>("PayInAccount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payin_account");

                    b.Property<double?>("PayTotal")
                        .HasColumnType("float")
                        .HasColumnName("pay_total");

                    b.Property<double?>("Plafond")
                        .HasColumnType("float")
                        .HasColumnName("plafond");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product");

                    b.Property<int?>("ProductSegmentId")
                        .HasColumnType("int")
                        .HasColumnName("prd_segment_id");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<int?>("SisaTenor")
                        .HasColumnType("int")
                        .HasColumnName("sisa_tenor");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int")
                        .HasColumnName("tenor");

                    b.Property<double?>("TunggakanBunga")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_bunga");

                    b.Property<double?>("TunggakanDenda")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_denda");

                    b.Property<double?>("TunggakanPokok")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_pokok");

                    b.Property<double?>("TunggakanTotal")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_total");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSegmentId");

                    b.ToTable("master_loan");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterLoanHistory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("acc_no");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<string>("Ccy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ccy");

                    b.Property<string>("ChannelBranchCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("channel_branch_code");

                    b.Property<string>("Cif")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cu_cif");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("Dpd")
                        .HasColumnType("int")
                        .HasColumnName("dpd");

                    b.Property<string>("EconName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("econa_name");

                    b.Property<string>("EconPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("econ_phone");

                    b.Property<string>("EconRelation")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("econ_relation");

                    b.Property<string>("Fasilitas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fasilitas");

                    b.Property<double?>("Installment")
                        .HasColumnType("float")
                        .HasColumnName("installment");

                    b.Property<double?>("InstallmentPokok")
                        .HasColumnType("float")
                        .HasColumnName("installment_pokok");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float")
                        .HasColumnName("interest_rate");

                    b.Property<double?>("KewajibanTotal")
                        .HasColumnType("float")
                        .HasColumnName("kewajiban_total");

                    b.Property<int?>("Kolektibilitas")
                        .HasColumnType("int")
                        .HasColumnName("kolektibilitas");

                    b.Property<DateTime?>("LastPayDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_pay_date");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<string>("MarketingCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("marketing_code");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime")
                        .HasColumnName("maturity_date");

                    b.Property<double?>("Outstanding")
                        .HasColumnType("float")
                        .HasColumnName("outstanding");

                    b.Property<string>("PayInAccount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payin_account");

                    b.Property<double?>("PayTotal")
                        .HasColumnType("float")
                        .HasColumnName("pay_total");

                    b.Property<double?>("Plafond")
                        .HasColumnType("float")
                        .HasColumnName("plafond");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product");

                    b.Property<int?>("ProductSegmentId")
                        .HasColumnType("int")
                        .HasColumnName("prd_segment_id");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<int?>("SisaTenor")
                        .HasColumnType("int")
                        .HasColumnName("sisa_tenor");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int")
                        .HasColumnName("tenor");

                    b.Property<double?>("TunggakanBunga")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_bunga");

                    b.Property<double?>("TunggakanDenda")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_denda");

                    b.Property<double?>("TunggakanPokok")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_pokok");

                    b.Property<double?>("TunggakanTotal")
                        .HasColumnType("float")
                        .HasColumnName("tunggakan_total");

                    b.HasKey("Id");

                    b.HasIndex("CallById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LoanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSegmentId");

                    b.ToTable("master_loan_history");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Nationality", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfnationality");
                });

            modelBuilder.Entity("Collectium.Model.Entity.NotifContent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("notif_content");
                });

            modelBuilder.Entity("Collectium.Model.Entity.NotifContentRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("NotifContentId")
                        .HasColumnType("int")
                        .HasColumnName("notif_content_id");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("NotifContentId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("notif_content_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PaymentHistory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("acc_no");

                    b.Property<double?>("Bunga")
                        .HasColumnType("float")
                        .HasColumnName("bunga");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<double?>("Denda")
                        .HasColumnType("float")
                        .HasColumnName("denda");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<double?>("PokokCicilan")
                        .HasColumnType("float")
                        .HasColumnName("pokok_cicilan");

                    b.Property<DateTime?>("Tgl")
                        .HasColumnType("datetime")
                        .HasColumnName("tgl");

                    b.Property<double?>("TotalBayar")
                        .HasColumnType("float")
                        .HasColumnName("total_bayar");

                    b.HasKey("Id");

                    b.HasIndex("CallById");

                    b.HasIndex("LoanId");

                    b.ToTable("payment_history");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PaymentRecord", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("AccNo")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("acc_no");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("CallById")
                        .HasColumnType("int")
                        .HasColumnName("call_by");

                    b.Property<int?>("CallId")
                        .HasColumnType("int")
                        .HasColumnName("call_id");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime")
                        .HasColumnName("record_date");

                    b.HasKey("Id");

                    b.HasIndex("CallById");

                    b.HasIndex("CallId");

                    b.ToTable("payment_record");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Permission", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("permission");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("core_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("desc");

                    b.Property<int?>("ProductSegmentId")
                        .HasColumnType("int")
                        .HasColumnName("prd_segment_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ProductSegmentId");

                    b.HasIndex("StatusId");

                    b.ToTable("rfproduct");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ProductSegment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code_code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Desc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfproduct_segment");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Provinsi", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfprovinsi");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Reason", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<int?>("isDC")
                        .HasColumnType("int")
                        .HasColumnName("is_dc");

                    b.Property<int?>("isFC")
                        .HasColumnType("int")
                        .HasColumnName("is_fc");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("reason");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ReasonRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<int?>("ReasonId")
                        .HasColumnType("int")
                        .HasColumnName("reason_id");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<int?>("isDC")
                        .HasColumnType("int")
                        .HasColumnName("is_dc");

                    b.Property<int?>("isFC")
                        .HasColumnType("int")
                        .HasColumnName("is_fc");

                    b.HasKey("Id");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("reason_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Restructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApproveById")
                        .HasColumnType("int")
                        .HasColumnName("approveby_id");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("approve_date");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_id");

                    b.Property<int?>("BranchPembukuanId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_pembukuan_id");

                    b.Property<int?>("BranchProsesId")
                        .HasColumnType("int")
                        .HasColumnName("mst_branch_proses_id");

                    b.Property<int?>("CheckById")
                        .HasColumnType("int")
                        .HasColumnName("checkby_id");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("check_date");

                    b.Property<int?>("CreateById")
                        .HasColumnType("int")
                        .HasColumnName("createby_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<double?>("Denda")
                        .HasColumnType("float")
                        .HasColumnName("denda");

                    b.Property<double?>("DiskonTunggakanDenda")
                        .HasColumnType("float")
                        .HasColumnName("disc_tunggakan_denda");

                    b.Property<double?>("DiskonTunggakanMargin")
                        .HasColumnType("float")
                        .HasColumnName("disc_tunggakan_margin");

                    b.Property<int?>("GracePeriode")
                        .HasColumnType("int")
                        .HasColumnName("grace_periode");

                    b.Property<int?>("JenisPenguranganId")
                        .HasColumnType("int")
                        .HasColumnName("jenis_pengurangan_id");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("keterangan");

                    b.Property<int?>("LastUpadteById")
                        .HasColumnType("int")
                        .HasColumnName("last_update_id");

                    b.Property<DateTime?>("LastUpadteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update_date");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<double?>("Margin")
                        .HasColumnType("float")
                        .HasColumnName("margin");

                    b.Property<double?>("MarginAmount")
                        .HasColumnType("float")
                        .HasColumnName("margin_amount");

                    b.Property<double?>("MarginPembayaran")
                        .HasColumnType("float")
                        .HasColumnName("margin_pembayaran");

                    b.Property<double?>("MarginPinalty")
                        .HasColumnType("float")
                        .HasColumnName("margin_pinalty");

                    b.Property<int?>("PembayaranGpId")
                        .HasColumnType("int")
                        .HasColumnName("pembayaran_gp_id");

                    b.Property<int?>("PenguranganNilaiMargin")
                        .HasColumnType("int")
                        .HasColumnName("pengurangan_nilai_margin");

                    b.Property<int?>("PeriodeDiskon")
                        .HasColumnType("int")
                        .HasColumnName("periode_diskon");

                    b.Property<string>("Permasalahan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("permasalahan");

                    b.Property<int?>("PolaRestrukId")
                        .HasColumnType("int")
                        .HasColumnName("pola_restruk_id");

                    b.Property<double?>("PrincipalPembayaran")
                        .HasColumnType("float")
                        .HasColumnName("principal_pembayaran");

                    b.Property<double?>("PrincipalPinalty")
                        .HasColumnType("float")
                        .HasColumnName("principal_pinalty");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("TglAkhirPeriodeDiskon")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_akhir_periode_diskon");

                    b.Property<DateTime?>("TglAwalPeriodeDiskon")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_awal_periode_diskon");

                    b.Property<DateTime?>("TglJatuhTempoBaru")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgl_jatuh_tempo_baru");

                    b.Property<double?>("TotalDiskonMargin")
                        .HasColumnType("float")
                        .HasColumnName("total_diskon_margin");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("value_date");

                    b.HasKey("Id");

                    b.HasIndex("ApproveById");

                    b.HasIndex("BranchId");

                    b.HasIndex("BranchPembukuanId");

                    b.HasIndex("BranchProsesId");

                    b.HasIndex("CheckById");

                    b.HasIndex("CreateById");

                    b.HasIndex("JenisPenguranganId");

                    b.HasIndex("LastUpadteById");

                    b.HasIndex("LoanId");

                    b.HasIndex("PembayaranGpId");

                    b.HasIndex("PolaRestrukId");

                    b.HasIndex("StatusId");

                    b.ToTable("restructure");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureApproval", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("ExecutionId")
                        .HasColumnType("int")
                        .HasColumnName("execution_id");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_id");

                    b.Property<int?>("RecipientRoleId")
                        .HasColumnType("int")
                        .HasColumnName("recipient_role_id");

                    b.Property<int?>("RestructureId")
                        .HasColumnType("int")
                        .HasColumnName("restructure_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<int?>("SenderRoleId")
                        .HasColumnType("int")
                        .HasColumnName("sender_role_id");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("RecipientRoleId");

                    b.HasIndex("RestructureId");

                    b.HasIndex("SenderId");

                    b.HasIndex("SenderRoleId");

                    b.ToTable("restructure_approval");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureCashFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BiayaBelanja")
                        .HasColumnType("int")
                        .HasColumnName("biaya_belanja");

                    b.Property<int?>("BiayaLainnya")
                        .HasColumnType("int")
                        .HasColumnName("biaya_lainnya");

                    b.Property<int?>("BiayaListrikAirTelp")
                        .HasColumnType("int")
                        .HasColumnName("biaya_listrik_air_telp");

                    b.Property<int?>("BiayaPendidikan")
                        .HasColumnType("int")
                        .HasColumnName("biaya_pendidikan");

                    b.Property<int?>("BiayaTransportasi")
                        .HasColumnType("int")
                        .HasColumnName("biaya_transportasi");

                    b.Property<int?>("CicilanLainnya")
                        .HasColumnType("int")
                        .HasColumnName("cicilan_lainnya");

                    b.Property<int?>("HutangDiBank")
                        .HasColumnType("int")
                        .HasColumnName("hutang_di_bank");

                    b.Property<int?>("PenghasilanBersih")
                        .HasColumnType("int")
                        .HasColumnName("penghasilan_bersih");

                    b.Property<int?>("PenghasilanLainnya")
                        .HasColumnType("int")
                        .HasColumnName("penghasilan_lainnya");

                    b.Property<int?>("PenghasilanNasabah")
                        .HasColumnType("int")
                        .HasColumnName("penghasilan_nasabah");

                    b.Property<int?>("PenghasilanPasangan")
                        .HasColumnType("int")
                        .HasColumnName("penghasilan_pasangan");

                    b.Property<int?>("RestructureId")
                        .HasColumnType("int")
                        .HasColumnName("restructure_id");

                    b.Property<int?>("Rpc70Persen")
                        .HasColumnType("int")
                        .HasColumnName("rpc_70_persen");

                    b.Property<int?>("TotalKewajiban")
                        .HasColumnType("int")
                        .HasColumnName("total_kewajiban");

                    b.Property<int?>("TotalPengeluaran")
                        .HasColumnType("int")
                        .HasColumnName("total_pengeluaran");

                    b.Property<int?>("TotalPenghasilan")
                        .HasColumnType("int")
                        .HasColumnName("total_penghasilan");

                    b.HasKey("Id");

                    b.HasIndex("RestructureId");

                    b.ToTable("restructure_cashflow");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureDocument", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentResutrukturId")
                        .HasColumnType("int")
                        .HasColumnName("doc_type_id");

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<string>("Mime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mime");

                    b.Property<int?>("RestructureId")
                        .HasColumnType("int")
                        .HasColumnName("restructure_id");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("DocumentResutrukturId");

                    b.HasIndex("RestructureId");

                    b.HasIndex("UserId");

                    b.ToTable("restructure_document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RfCounter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<int?>("Val")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfcounter");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RfGlobal", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.Property<string>("Val")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("rfglobal");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Role", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RolePermission", b =>
                {
                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("permission_id");

                    b.Property<int?>("Approve")
                        .HasColumnType("int")
                        .HasColumnName("approve");

                    b.Property<int?>("Assign")
                        .HasColumnType("int")
                        .HasColumnName("assign");

                    b.Property<int?>("Create")
                        .HasColumnType("int")
                        .HasColumnName("save");

                    b.Property<int?>("Delete")
                        .HasColumnType("int")
                        .HasColumnName("delete");

                    b.Property<int?>("Read")
                        .HasColumnType("int")
                        .HasColumnName("read");

                    b.Property<int?>("Update")
                        .HasColumnType("int")
                        .HasColumnName("update");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("role_permission");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RoleRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("role_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Status", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("status");

                    b.HasDiscriminator<string>("Type").HasValue("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGBranch", b =>
                {
                    b.Property<string>("COMPANY_CODE")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("COMPANY_CODE");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<int?>("COMPANY_GROUP")
                        .HasColumnType("int")
                        .HasColumnName("COMPANY_GROUP");

                    b.Property<string>("COMPANY_NAME")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPANY_NAME");

                    b.Property<string>("CO_CODE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CO_CODE");

                    b.Property<int?>("CURR_NO")
                        .HasColumnType("int")
                        .HasColumnName("CURR_NO");

                    b.Property<string>("CUSTOMER_COMPANY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CUSTOMER_COMPANY");

                    b.Property<string>("CUSTOMER_MNEMONIC")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CUSTOMER_MNEMONIC");

                    b.Property<DateTime?>("DATE_TIME")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_TIME");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ID");

                    b.Property<string>("MNEMONIC")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MNEMONIC");

                    b.Property<string>("NAME_ADDRESS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME_ADDRESS");

                    b.HasKey("COMPANY_CODE", "STG_DATE");

                    b.ToTable("STG_BRANCH");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGCustomer", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ID"), 1L, 1);

                    b.Property<string>("ALAMAT_KONTAK_DARURAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALAMAT_KONTAK_DARURAT");

                    b.Property<string>("ALAMAT_PERUSAHAAN_USAHA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALAMAT_PERUSAHAAN_USAHA");

                    b.Property<DateTime?>("AS_OF_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("AS_OF_DATE");

                    b.Property<string>("BIDANG_USAHA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BIDANG_USAHA");

                    b.Property<string>("BRANCH_CODE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BRANCH_CODE");

                    b.Property<string>("CU_ADDR1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_ADDR1");

                    b.Property<string>("CU_ADDR2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_ADDR2");

                    b.Property<string>("CU_ADDR_STAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_ADDR_STAT");

                    b.Property<string>("CU_CIF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_CIF");

                    b.Property<string>("CU_CITY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_CITY");

                    b.Property<string>("CU_COMPANYNAME")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_COMPANYNAME");

                    b.Property<DateTime?>("CU_DOB")
                        .HasColumnType("datetime2")
                        .HasColumnName("CU_DOB");

                    b.Property<string>("CU_EMAIL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_EMAIL");

                    b.Property<string>("CU_FIRSTNAME")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_FIRSTNAME");

                    b.Property<string>("CU_GENDER")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_GENDER");

                    b.Property<string>("CU_HPNUM")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_HPNUM");

                    b.Property<string>("CU_IDNUM")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_IDNUM");

                    b.Property<string>("CU_IDTYPE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_IDTYPE");

                    b.Property<string>("CU_INCOME")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_INCOME");

                    b.Property<string>("CU_INCOMETYPE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_INCOMETYPE");

                    b.Property<string>("CU_KEC")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_KEC");

                    b.Property<string>("CU_KEL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_KEL");

                    b.Property<string>("CU_MARITAL_STATUS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_MARITAL_STATUS");

                    b.Property<string>("CU_NATIONALITY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_NATIONALITY");

                    b.Property<string>("CU_OCCUPATION")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_OCCUPATION");

                    b.Property<string>("CU_PHNNUM")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_PHNNUM");

                    b.Property<string>("CU_POB")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_POB");

                    b.Property<string>("CU_PROVINSI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_PROVINSI");

                    b.Property<string>("CU_REF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_REF");

                    b.Property<string>("CU_RT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_RT");

                    b.Property<string>("CU_RW")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_RW");

                    b.Property<string>("CU_TYPE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_TYPE");

                    b.Property<string>("CU_ZIP_CODE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_ZIP_CODE");

                    b.Property<string>("HUBUNGAN_KELUARGA_TIDAK_SERUMAH")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HUBUNGAN_KELUARGA_TIDAK_SERUMAH");

                    b.Property<string>("KELUARGA_TIDAK_SERUMAH")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KELUARGA_TIDAK_SERUMAH");

                    b.Property<string>("NO_NPWP")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_NPWP");

                    b.Property<string>("NO_REKENING")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_REKENING");

                    b.Property<string>("NO_TLP_KANTOR_USAHA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_TLP_KANTOR_USAHA");

                    b.Property<string>("NO_TLP_KONTAK_DARURAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_TLP_KONTAK_DARURAT");

                    b.Property<string>("PEKERJAAN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PEKERJAAN");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.HasKey("ID");

                    b.ToTable("STG_CUSTOMER_NASABAH");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGCustomerPhone", b =>
                {
                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CIF");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("PHONE")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PHONE");

                    b.HasKey("CIF", "STG_DATE", "PHONE");

                    b.ToTable("STG_CUSTOMER_PHONE");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataJaminan", b =>
                {
                    b.Property<string>("CU_CIF")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CU_CIF");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("AKTA_CG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AKTA_CG");

                    b.Property<string>("AKTA_GADAI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AKTA_GADAI");

                    b.Property<string>("AKTA_PG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AKTA_PG");

                    b.Property<string>("ALAMAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALAMAT");

                    b.Property<string>("ANALISA_KONDISI_FISIK_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ANALISA_KONDISI_FISIK_ASET");

                    b.Property<string>("ARAH_MATA_ANGIN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ARAH_MATA_ANGIN");

                    b.Property<string>("ATAS_NAMA_SERTIFIKAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ATAS_NAMA_SERTIFIKAT");

                    b.Property<string>("CABANG_PENGELOLA_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CABANG_PENGELOLA_ASET");

                    b.Property<string>("DIREKTORAT_PENGENDALI_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DIREKTORAT_PENGENDALI_ASET");

                    b.Property<double?>("HARGA_JUAL")
                        .HasColumnType("float")
                        .HasColumnName("HARGA_JUAL");

                    b.Property<double?>("HARGA_NJOP_BANGUNAN")
                        .HasColumnType("float")
                        .HasColumnName("HARGA_NJOP_BANGUNAN");

                    b.Property<double?>("HARGA_NJOP_TANAH")
                        .HasColumnType("float")
                        .HasColumnName("HARGA_NJOP_TANAH");

                    b.Property<double?>("HARGA_SEWA")
                        .HasColumnType("float")
                        .HasColumnName("HARGA_SEWA");

                    b.Property<string>("JENIS_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JENIS_ASET");

                    b.Property<int?>("JML_KAMAR_MANDI")
                        .HasColumnType("int")
                        .HasColumnName("JML_KAMAR_MANDI");

                    b.Property<int?>("JML_KAMAR_TIDUR")
                        .HasColumnType("int")
                        .HasColumnName("JML_KAMAR_TIDUR");

                    b.Property<int?>("JML_KAPASITAS_PARKIR")
                        .HasColumnType("int")
                        .HasColumnName("JML_KAPASITAS_PARKIR");

                    b.Property<int?>("JML_LANTAI")
                        .HasColumnType("int")
                        .HasColumnName("JML_LANTAI");

                    b.Property<string>("KABUPATEN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KABUPATEN");

                    b.Property<string>("KECAMATAN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KECAMATAN");

                    b.Property<string>("KELURAHAN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KELURAHAN");

                    b.Property<string>("KODE_POS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KODE_POS");

                    b.Property<string>("KONDISI_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KONDISI_ASET");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LATITUDE");

                    b.Property<double?>("LEBAR_BANGUNAN")
                        .HasColumnType("float")
                        .HasColumnName("LEBAR_BANGUNAN");

                    b.Property<double?>("LEBAR_TANAH")
                        .HasColumnType("float")
                        .HasColumnName("LEBAR_TANAH");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LONGITUDE");

                    b.Property<double?>("LUAS_BANGUNAN")
                        .HasColumnType("float")
                        .HasColumnName("LUAS_BANGUNAN");

                    b.Property<double?>("LUAS_TANAH")
                        .HasColumnType("float")
                        .HasColumnName("LUAS_TANAH");

                    b.Property<string>("NAMA_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_ASET");

                    b.Property<string>("NAMA_KJPP")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_KJPP");

                    b.Property<string>("NAMA_PENILAI_JAMINAN_INT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_PENILAI_JAMINAN_INT");

                    b.Property<string>("NIB")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NIB");

                    b.Property<string>("NILAI_CESSIE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_CESSIE");

                    b.Property<string>("NILAI_CG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_CG");

                    b.Property<string>("NILAI_FIDUSIA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_FIDUSIA");

                    b.Property<string>("NILAI_GADAI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_GADAI");

                    b.Property<string>("NILAI_HT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_HT");

                    b.Property<int?>("NILAI_LIKUIDASI")
                        .HasColumnType("int")
                        .HasColumnName("NILAI_LIKUIDASI");

                    b.Property<double?>("NILAI_LIKUIDASI_EXT")
                        .HasColumnType("float")
                        .HasColumnName("NILAI_LIKUIDASI_EXT");

                    b.Property<double?>("NILAI_PASAR_WAJAR_EXT")
                        .HasColumnType("float")
                        .HasColumnName("NILAI_PASAR_WAJAR_EXT");

                    b.Property<double?>("NILAI_PASAR_WAJAR_INT")
                        .HasColumnType("float")
                        .HasColumnName("NILAI_PASAR_WAJAR_INT");

                    b.Property<string>("NILAI_PG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NILAI_PG");

                    b.Property<string>("NOMOR_CESSIE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_CESSIE");

                    b.Property<string>("NOMOR_FIDUSIA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_FIDUSIA");

                    b.Property<string>("NOMOR_HT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_HT");

                    b.Property<string>("NOP_PBB")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOP_PBB");

                    b.Property<string>("NO_PENGIKATAN_JAMINAN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_PENGIKATAN_JAMINAN");

                    b.Property<string>("NO_SERTIFIKAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_SERTIFIKAT");

                    b.Property<double?>("PANJANG_BANGUNAN")
                        .HasColumnType("float")
                        .HasColumnName("PANJANG_BANGUNAN");

                    b.Property<double?>("PANJANG_TANAH")
                        .HasColumnType("float")
                        .HasColumnName("PANJANG_TANAH");

                    b.Property<string>("PERUNTUKAN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PERUNTUKAN");

                    b.Property<string>("PROVINSI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROVINSI");

                    b.Property<string>("REKOMENDASI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REKOMENDASI");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RT");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RW");

                    b.Property<string>("STATUS_SERAH_TERIMA_KUNCI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STATUS_SERAH_TERIMA_KUNCI");

                    b.Property<DateTime?>("TANGGAL_NILAI_PASAR_WAJAR_EXT")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_NILAI_PASAR_WAJAR_EXT");

                    b.Property<DateTime?>("TANGGAL_NILAI_PASAR_WAJAR_INT")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_NILAI_PASAR_WAJAR_INT");

                    b.Property<DateTime?>("TANGGAL_PBB_LAST_PAYMENT")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PBB_LAST_PAYMENT");

                    b.Property<DateTime?>("TANGGAL_PENETAPAN_ASET")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PENETAPAN_ASET");

                    b.Property<DateTime?>("TANGGAL_PENGIKATAN_JAMINAN")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PENGIKATAN_JAMINAN");

                    b.Property<string>("TANGGAL_SERAH_TERIMA_KUNCI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TANGGAL_SERAH_TERIMA_KUNCI");

                    b.Property<DateTime?>("TGL_EXP_SERTIFIKAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("TGL_EXP_SERTIFIKAT");

                    b.Property<string>("TIPE_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPE_ASET");

                    b.Property<string>("TIPE_SERTIFIKAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPE_SERTIFIKAT");

                    b.Property<string>("TOTAL_SERTIFIKAT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOTAL_SERTIFIKAT");

                    b.Property<string>("UPAYA_PENYELESAIAN_ASET")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UPAYA_PENYELESAIAN_ASET");

                    b.HasKey("CU_CIF", "STG_DATE");

                    b.ToTable("STG_DATA_JAMINAN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataKredit", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("ACCOUNT_OFFICER")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACCOUNT_OFFICER_X");

                    b.Property<string>("ASURANSI_ID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ASURANSI_ID");

                    b.Property<DateTime?>("BOOKING_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("BOOKING_DATE");

                    b.Property<string>("CABANG_ASAL_DEBITUR")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CABANG_ASAL_DEBITUR");

                    b.Property<string>("CU_CIF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CU_CIF");

                    b.Property<string>("FASILITAS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FASILITAS");

                    b.Property<string>("INSURANCE_TYPE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INSURANCE_TYPE");

                    b.Property<string>("ISO_CURRENCY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISO_CURRENCY");

                    b.Property<string>("KATAGORI_DEBITUR")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KATAGORI_DEBITUR");

                    b.Property<string>("KODE_ACCOUNT_OFFICER")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KODE_ACCOUNT_OFFICER_X");

                    b.Property<string>("KOMITE_PEMUTUS_KREDIT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE_PEMUTUS_KREDIT_X");

                    b.Property<string>("LIMIT_ID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIMIT_ID");

                    b.Property<string>("LOAN_NUMBER")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOAN_NUMBER");

                    b.Property<DateTime?>("MATURITY_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("MATURITY_DATE");

                    b.Property<string>("NAMA_NOTARIS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_NOTARIS_X");

                    b.Property<string>("NO_PK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NO_PK_X");

                    b.Property<string>("OBLIGOR")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBLIGOR");

                    b.Property<double?>("OUTSTANDING")
                        .HasColumnType("float")
                        .HasColumnName("OUTSTANDING");

                    b.Property<double?>("PLAFON")
                        .HasColumnType("float")
                        .HasColumnName("PLAFON");

                    b.Property<double?>("PRINCIPAL_IDR")
                        .HasColumnType("float")
                        .HasColumnName("PRINCIPAL_IDR");

                    b.Property<double?>("PRINCIPAL_USD")
                        .HasColumnType("float")
                        .HasColumnName("PRINCIPAL_USD");

                    b.Property<string>("SEGMENTASI")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SEGMENTASI");

                    b.Property<int?>("SISA_SETORAN")
                        .HasColumnType("int")
                        .HasColumnName("SISA_SETORAN");

                    b.Property<string>("STAFF_LEGAL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STAFF_LEGAL_X");

                    b.Property<DateTime?>("TANGGAL_MULAI_MENUNGGAK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_MULAI_MENUNGGAK");

                    b.Property<DateTime?>("TANGGAL_PK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PK_X");

                    b.Property<int?>("TENOR")
                        .HasColumnType("int")
                        .HasColumnName("TENOR");

                    b.Property<double?>("TOTAL_PENARIKAN")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_PENARIKAN");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_KREDIT");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanBiayaLain", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("NAMA_Biaya_Lain")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_Biaya_Lain");

                    b.Property<double?>("Nominal_Biaya_Lain")
                        .HasColumnType("float")
                        .HasColumnName("Nominal_Biaya_Lain");

                    b.Property<DateTime?>("Tanggal_Biaya_Lain")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_Biaya_Lain");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_BIAYA_LAIN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanKodeAO", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("KODE_AO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KODE_AO");

                    b.Property<DateTime?>("TANGGAL_AO")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_AO");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_KODEAO");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanKomiteKredit", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("KOMITE01")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE01");

                    b.Property<string>("KOMITE02")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE02");

                    b.Property<string>("KOMITE03")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE03");

                    b.Property<string>("KOMITE04")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE04");

                    b.Property<string>("KOMITE05")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE05");

                    b.Property<string>("KOMITE06")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KOMITE06");

                    b.Property<string>("NOMOR_PK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_PK");

                    b.Property<DateTime?>("TANGGAL_PK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PK");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_KOMITEKREDIT");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanKSL", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("NAMA_KSL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_KSL");

                    b.Property<string>("Saldo_KSL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Saldo_KSL");

                    b.Property<DateTime?>("Tanggal_KSL")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_KSL");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_KSL");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanPK", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("NAMA_LEGAL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_LEGAL");

                    b.Property<string>("NAMA_NOTARIS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_NOTARIS");

                    b.Property<string>("NOMOR_PK")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMOR_PK");

                    b.Property<DateTime?>("TANGGAL_PK")
                        .HasColumnType("datetime2")
                        .HasColumnName("TANGGAL_PK");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_PK");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGDataLoanTagihanLain", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<string>("NAMA_TL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA_TL");

                    b.Property<double?>("Nominal_TL")
                        .HasColumnType("float")
                        .HasColumnName("Nominal_TL");

                    b.Property<DateTime?>("Tanggal_TL")
                        .HasColumnType("datetime2")
                        .HasColumnName("Tanggal_TL");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_DATA_LOAN_TAGIHAN_LAIN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGLoanDetail", b =>
                {
                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<double?>("BIAYA_LAINNYA")
                        .HasColumnType("float")
                        .HasColumnName("BIAYA_LAINNYA_X");

                    b.Property<double?>("BUNGA_DENDA")
                        .HasColumnType("float")
                        .HasColumnName("BUNGA_DENDA");

                    b.Property<double?>("CHARGES_PAID")
                        .HasColumnType("float")
                        .HasColumnName("CHARGES_PAID");

                    b.Property<int?>("DPD")
                        .HasColumnType("int")
                        .HasColumnName("DPD");

                    b.Property<DateTime?>("FileDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("file_date");

                    b.Property<double?>("INSTALLMENT")
                        .HasColumnType("float")
                        .HasColumnName("INSTALLMENT");

                    b.Property<double?>("INTEREST_DUE")
                        .HasColumnType("float")
                        .HasColumnName("INTEREST_DUE");

                    b.Property<double?>("INTEREST_PAID")
                        .HasColumnType("float")
                        .HasColumnName("INTEREST_PAID");

                    b.Property<int?>("KOLEKTIBILITY")
                        .HasColumnType("int")
                        .HasColumnName("KOLEKTIBILITY");

                    b.Property<double?>("KSL")
                        .HasColumnType("float")
                        .HasColumnName("KSL_X");

                    b.Property<DateTime?>("LAST_PAYMENT_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_PAYMENT_DATE");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MATURITY_DATE");

                    b.Property<double?>("OUTSTANDING")
                        .HasColumnType("float")
                        .HasColumnName("OUTSTANDING");

                    b.Property<double?>("PENALTY_DENDA")
                        .HasColumnType("float")
                        .HasColumnName("PENALTY_DENDA");

                    b.Property<double?>("PRINCIPAL_DUE")
                        .HasColumnType("float")
                        .HasColumnName("PRINCIPAL_DUE");

                    b.Property<double?>("PRINCIPAL_PAID")
                        .HasColumnType("float")
                        .HasColumnName("PRINCIPAL_PAID");

                    b.Property<string>("PayInAccount")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payin_account");

                    b.Property<double?>("Plafond")
                        .HasColumnType("float")
                        .HasColumnName("PLAFOND");

                    b.Property<string>("ProductLoan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_LOAN");

                    b.Property<double?>("SALDO_AKHIR")
                        .HasColumnType("float")
                        .HasColumnName("SALDO_AKHIR");

                    b.Property<double?>("SUB_TOTAL")
                        .HasColumnType("float")
                        .HasColumnName("SUB_TOTAL");

                    b.Property<double?>("SUKU_BUNGA")
                        .HasColumnType("float")
                        .HasColumnName("SUKU_BUNGA");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SEGMENT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("START_DATE");

                    b.Property<double?>("TAGIHAN_LAINYA")
                        .HasColumnType("float")
                        .HasColumnName("TAGIHAN_LAINNYA_X");

                    b.Property<double?>("TOTAL_KEWAJIBAN")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_KEWAJIBAN");

                    b.Property<double?>("TOT_PAID")
                        .HasColumnType("float")
                        .HasColumnName("TOT_PAID");

                    b.HasKey("ACC_NO", "STG_DATE");

                    b.ToTable("STG_LOAN_DETAIL");
                });

            modelBuilder.Entity("Collectium.Model.Entity.STGSmsReminder", b =>
                {
                    b.Property<string>("CU_CIF")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CU_CIF");

                    b.Property<string>("ACC_NO")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ACC_NO");

                    b.Property<string>("HP")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("NO_HP");

                    b.Property<DateTime?>("STG_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("STG_DATE");

                    b.Property<int?>("DAY")
                        .HasColumnType("int")
                        .HasColumnName("REMINDER_DAY");

                    b.Property<DateTime?>("DUE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("DUE_DATE");

                    b.Property<string>("NAMA")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAMA");

                    b.HasKey("CU_CIF", "ACC_NO", "HP", "STG_DATE");

                    b.ToTable("STG_SMSREMINDER");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Team", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("SpvId")
                        .HasColumnType("int")
                        .HasColumnName("spv_id");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BranchId");

                    b.HasIndex("SpvId");

                    b.ToTable("team");
                });

            modelBuilder.Entity("Collectium.Model.Entity.TeamMember", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("team_member");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Expire")
                        .HasColumnType("datetime2")
                        .HasColumnName("expire");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("firstname");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("token");
                });

            modelBuilder.Entity("Collectium.Model.Entity.TrackingFc", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<double?>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("lat");

                    b.Property<double?>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("lon");

                    b.Property<DateTime?>("Tgl")
                        .HasColumnType("datetime")
                        .HasColumnName("tgl");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tracking");
                });

            modelBuilder.Entity("Collectium.Model.Entity.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ActiveBranchId")
                        .HasColumnType("int")
                        .HasColumnName("active_branch_id");

                    b.Property<int?>("Administrator")
                        .HasColumnType("int")
                        .HasColumnName("admin");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<int?>("Fail")
                        .HasColumnType("int")
                        .HasColumnName("fail");

                    b.Property<string>("Fcm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fcm");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("PassDevice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pass_device");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TelCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_code");

                    b.Property<string>("TelDevice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_device");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserBranch", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("user_branch");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserBranchRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("UserBranchId")
                        .HasColumnType("int")
                        .HasColumnName("user_branch_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("UserRequestId")
                        .HasColumnType("int")
                        .HasColumnName("user_req_id");

                    b.HasKey("Id");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserBranchId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserRequestId");

                    b.ToTable("user_branch_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserRequest", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("Administrator")
                        .HasColumnType("int")
                        .HasColumnName("admin");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("approve_date");

                    b.Property<int?>("ApproveUserId")
                        .HasColumnType("int")
                        .HasColumnName("approve_user_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Fcm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fcm");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int?>("RequestUserId")
                        .HasColumnType("int")
                        .HasColumnName("req_user_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("SpvId")
                        .HasColumnType("int")
                        .HasColumnName("spv_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TelCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_code");

                    b.Property<string>("TelDevice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_device");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("ApproveUserId");

                    b.HasIndex("RequestUserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SpvId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("users_req");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AlasanLelang", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("REAU");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Asuransi", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("ASRS");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AsuransiSisaKlaim", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("SIKL");
                });

            modelBuilder.Entity("Collectium.Model.Entity.BalaiLelang", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("BLAU");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentAuction", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("DOCA");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentAuctionResult", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("DOCS");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentAyda", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("DAYDA");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentInsurance", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("DOCE");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentRestruktur", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("DOCR");
                });

            modelBuilder.Entity("Collectium.Model.Entity.HubunganBank", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("HUBB");
                });

            modelBuilder.Entity("Collectium.Model.Entity.JenisLelang", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("TYAU");
                });

            modelBuilder.Entity("Collectium.Model.Entity.JenisPengurangan", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("JENP");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PembayaranGp", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("BYRG");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PolaRestruktur", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("POLR");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RecoveryExecution", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.GenericParameter");

                    b.ToTable("generic_param");

                    b.HasDiscriminator().HasValue("EXER");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusAsuransi", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("INSR");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusCall", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("CALL");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusGeneral", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("GEN");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusLeLang", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("AUCT");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusRequest", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("REQ");
                });

            modelBuilder.Entity("Collectium.Model.Entity.StatusRestruktur", b =>
                {
                    b.HasBaseType("Collectium.Model.Entity.Status");

                    b.ToTable("status");

                    b.HasDiscriminator().HasValue("REST");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AccountDistribution", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AccountDistributionRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.AccountDistribution", "AccountDistribution")
                        .WithMany()
                        .HasForeignKey("AccountDistributionId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("AccountDistribution");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Action", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionGroup", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Action");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionGroupRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.ActionGroup", "ActionGroup")
                        .WithMany()
                        .HasForeignKey("ActionGroupId");

                    b.HasOne("Collectium.Model.Entity.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Action");

                    b.Navigation("ActionGroup");

                    b.Navigation("ApprovedUser");

                    b.Navigation("RequestUser");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ActionRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Action");

                    b.Navigation("ApprovedUser");

                    b.Navigation("RequestUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AgentDistribution", b =>
                {
                    b.HasOne("Collectium.Model.Entity.DistributionRule", "Rule")
                        .WithMany("Agent")
                        .HasForeignKey("DistId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Rule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Area", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AreaRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Area");

                    b.Navigation("Branch");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Auction", b =>
                {
                    b.HasOne("Collectium.Model.Entity.AlasanLelang", "AlasanLelang")
                        .WithMany()
                        .HasForeignKey("AlasanLelangId");

                    b.HasOne("Collectium.Model.Entity.BalaiLelang", "BalaiLelang")
                        .WithMany()
                        .HasForeignKey("BalaiLelangId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchPembukuan")
                        .WithMany()
                        .HasForeignKey("BranchPembukuanId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchProses")
                        .WithMany()
                        .HasForeignKey("BranchProsesId");

                    b.HasOne("Collectium.Model.Entity.JenisLelang", "JenisLelang")
                        .WithMany()
                        .HasForeignKey("JenisLelangId");

                    b.HasOne("Collectium.Model.Entity.User", "LastUpadteBy")
                        .WithMany()
                        .HasForeignKey("LastUpadteById");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.StatusLeLang", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("AlasanLelang");

                    b.Navigation("BalaiLelang");

                    b.Navigation("Branch");

                    b.Navigation("BranchPembukuan");

                    b.Navigation("BranchProses");

                    b.Navigation("JenisLelang");

                    b.Navigation("LastUpadteBy");

                    b.Navigation("Loan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionApproval", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("AuctionId");

                    b.HasOne("Collectium.Model.Entity.RecoveryExecution", "Execution")
                        .WithMany()
                        .HasForeignKey("ExecutionId");

                    b.HasOne("Collectium.Model.Entity.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Collectium.Model.Entity.Role", "RecipientRole")
                        .WithMany()
                        .HasForeignKey("RecipientRoleId");

                    b.HasOne("Collectium.Model.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Collectium.Model.Entity.Role", "SenderRole")
                        .WithMany()
                        .HasForeignKey("SenderRoleId");

                    b.Navigation("Auction");

                    b.Navigation("Execution");

                    b.Navigation("Recipient");

                    b.Navigation("RecipientRole");

                    b.Navigation("Sender");

                    b.Navigation("SenderRole");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionDocument", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Auction", "Auction")
                        .WithMany("Document")
                        .HasForeignKey("AuctionId");

                    b.HasOne("Collectium.Model.Entity.DocumentAuction", "DocumentAuction")
                        .WithMany()
                        .HasForeignKey("DocumentAuctionId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Auction");

                    b.Navigation("DocumentAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AuctionResultDocument", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Auction", "Auction")
                        .WithMany("DocumentResult")
                        .HasForeignKey("AuctionId");

                    b.HasOne("Collectium.Model.Entity.DocumentAuctionResult", "DocumentResultAuction")
                        .WithMany()
                        .HasForeignKey("DocumentResultAuctionId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Auction");

                    b.Navigation("DocumentResultAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Ayda", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchPembukuan")
                        .WithMany()
                        .HasForeignKey("BranchPembukuanId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchProses")
                        .WithMany()
                        .HasForeignKey("BranchProsesId");

                    b.HasOne("Collectium.Model.Entity.AlasanLelang", "HubunganBank")
                        .WithMany()
                        .HasForeignKey("HubunganBankId");

                    b.HasOne("Collectium.Model.Entity.User", "LastUpadteBy")
                        .WithMany()
                        .HasForeignKey("LastUpadteById");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.StatusAsuransi", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Branch");

                    b.Navigation("BranchPembukuan");

                    b.Navigation("BranchProses");

                    b.Navigation("HubunganBank");

                    b.Navigation("LastUpadteBy");

                    b.Navigation("Loan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AydaApproval", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Ayda", "Ayda")
                        .WithMany()
                        .HasForeignKey("AydaId");

                    b.HasOne("Collectium.Model.Entity.RecoveryExecution", "Execution")
                        .WithMany()
                        .HasForeignKey("ExecutionId");

                    b.HasOne("Collectium.Model.Entity.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Collectium.Model.Entity.Role", "RecipientRole")
                        .WithMany()
                        .HasForeignKey("RecipientRoleId");

                    b.HasOne("Collectium.Model.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Collectium.Model.Entity.Role", "SenderRole")
                        .WithMany()
                        .HasForeignKey("SenderRoleId");

                    b.Navigation("Ayda");

                    b.Navigation("Execution");

                    b.Navigation("Recipient");

                    b.Navigation("RecipientRole");

                    b.Navigation("Sender");

                    b.Navigation("SenderRole");
                });

            modelBuilder.Entity("Collectium.Model.Entity.AydaDocument", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Ayda", "Ayda")
                        .WithMany()
                        .HasForeignKey("AydaId");

                    b.HasOne("Collectium.Model.Entity.DocumentAyda", "DocumentAyda")
                        .WithMany()
                        .HasForeignKey("DocumentAydaId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Ayda");

                    b.Navigation("DocumentAyda");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Branch", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Collectium.Model.Entity.BranchType", "BranchType")
                        .WithMany()
                        .HasForeignKey("BranchTypeId");

                    b.HasOne("Collectium.Model.Entity.ProductSegment", "ProductSegment")
                        .WithMany()
                        .HasForeignKey("ProductSegmentId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Area");

                    b.Navigation("BranchType");

                    b.Navigation("ProductSegment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.BranchRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchCco")
                        .WithMany()
                        .HasForeignKey("BranchCcoId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.BranchType", "BranchType")
                        .WithMany()
                        .HasForeignKey("BranchTypeId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Area");

                    b.Navigation("Branch");

                    b.Navigation("BranchCco");

                    b.Navigation("BranchType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.BranchType", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.CollectionCall", "CollectionCall")
                        .WithMany()
                        .HasForeignKey("CollectionCallId");

                    b.HasOne("Collectium.Model.Entity.StatusCall", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CollectionCall");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallResult", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallScript", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CallScriptRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.CallScript", "CallScript")
                        .WithMany()
                        .HasForeignKey("CallScriptId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ApprovedUser");

                    b.Navigation("CallScript");

                    b.Navigation("RequestUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.City", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Provinsi", "Provinsi")
                        .WithMany()
                        .HasForeignKey("ProvinsiId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Provinsi");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionAddContact", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "AddBy")
                        .WithMany()
                        .HasForeignKey("AddById");

                    b.Navigation("AddBy");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionCall", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.CallResult", "CallResult")
                        .WithMany()
                        .HasForeignKey("CallResultId");

                    b.HasOne("Collectium.Model.Entity.CollectionAddContact", "CollectionAdd")
                        .WithMany()
                        .HasForeignKey("CollectionAddId");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithOne("Call")
                        .HasForeignKey("Collectium.Model.Entity.CollectionCall", "LoanId");

                    b.HasOne("Collectium.Model.Entity.Reason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId");

                    b.Navigation("Branch");

                    b.Navigation("CallBy");

                    b.Navigation("CallResult");

                    b.Navigation("CollectionAdd");

                    b.Navigation("Loan");

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionContactPhoto", b =>
                {
                    b.HasOne("Collectium.Model.Entity.CollectionAddContact", "CollectionAddContact")
                        .WithMany("Photo")
                        .HasForeignKey("CollectionContactId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CollectionAddContact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionHistory", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.CollectionCall", "Call")
                        .WithMany()
                        .HasForeignKey("CallId");

                    b.HasOne("Collectium.Model.Entity.CollectionAddContact", "CollectionAdd")
                        .WithMany()
                        .HasForeignKey("CollectionAddId");

                    b.HasOne("Collectium.Model.Entity.User", "HistoryBy")
                        .WithMany()
                        .HasForeignKey("HistoryById");

                    b.HasOne("Collectium.Model.Entity.Reason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId");

                    b.HasOne("Collectium.Model.Entity.CallResult", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId");

                    b.Navigation("Branch");

                    b.Navigation("Call");

                    b.Navigation("CallBy");

                    b.Navigation("CollectionAdd");

                    b.Navigation("HistoryBy");

                    b.Navigation("Reason");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionPhoto", b =>
                {
                    b.HasOne("Collectium.Model.Entity.CollectionHistory", "CollectionHistory")
                        .WithMany("Photo")
                        .HasForeignKey("CollectionHistoryId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CollectionHistory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionTrace", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.CollectionCall", "Call")
                        .WithMany()
                        .HasForeignKey("CallId");

                    b.HasOne("Collectium.Model.Entity.CallResult", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId");

                    b.Navigation("Call");

                    b.Navigation("CallBy");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionVisit", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.User", "VisitBy")
                        .WithMany()
                        .HasForeignKey("VisitById");

                    b.HasOne("Collectium.Model.Entity.CallResult", "CallResult")
                        .WithMany()
                        .HasForeignKey("VisitResultId");

                    b.Navigation("Branch");

                    b.Navigation("CallResult");

                    b.Navigation("VisitBy");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Counter", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Branch");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Customer", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Collectium.Model.Entity.CustomerOccupation", "CustomerOccupation")
                        .WithMany()
                        .HasForeignKey("CustomerOccupationId");

                    b.HasOne("Collectium.Model.Entity.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId");

                    b.HasOne("Collectium.Model.Entity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Collectium.Model.Entity.IdType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId");

                    b.HasOne("Collectium.Model.Entity.IncomeType", "IncomeType")
                        .WithMany()
                        .HasForeignKey("IncomeTypeId");

                    b.HasOne("Collectium.Model.Entity.Kecamatan", "Kecamatan")
                        .WithMany()
                        .HasForeignKey("KecamatanId");

                    b.HasOne("Collectium.Model.Entity.Kelurahan", "Kelurahan")
                        .WithMany()
                        .HasForeignKey("KelurahanId");

                    b.HasOne("Collectium.Model.Entity.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("Collectium.Model.Entity.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("Collectium.Model.Entity.Provinsi", "Provinsi")
                        .WithMany()
                        .HasForeignKey("ProvinsiId");

                    b.Navigation("Branch");

                    b.Navigation("City");

                    b.Navigation("CustomerOccupation");

                    b.Navigation("CustomerType");

                    b.Navigation("Gender");

                    b.Navigation("IdType");

                    b.Navigation("IncomeType");

                    b.Navigation("Kecamatan");

                    b.Navigation("Kelurahan");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");

                    b.Navigation("Provinsi");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CustomerOccupation", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CustomerType", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DistributionRule", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Branch");

                    b.Navigation("Product");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DocumentSignature", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Collectium.Model.Entity.FcMappingMikroColl", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "Fc")
                        .WithMany()
                        .HasForeignKey("FcId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Fc");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.FcMappingMikroCollRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "Fc")
                        .WithMany()
                        .HasForeignKey("FcId");

                    b.HasOne("Collectium.Model.Entity.FcMappingMikroColl", "FcMappingMikroColl")
                        .WithMany()
                        .HasForeignKey("FcMappingMikroCollId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Fc");

                    b.Navigation("FcMappingMikroColl");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Gender", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.GenerateLetter", b =>
                {
                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Loan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.IdType", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.IncomeType", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Insurance", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Asuransi", "Asuransi")
                        .WithMany()
                        .HasForeignKey("AsuransiId");

                    b.HasOne("Collectium.Model.Entity.AsuransiSisaKlaim", "AsuransiSisaKlaim")
                        .WithMany()
                        .HasForeignKey("AsuransiSisaKlaimId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchPembukuan")
                        .WithMany()
                        .HasForeignKey("BranchPembukuanId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchProses")
                        .WithMany()
                        .HasForeignKey("BranchProsesId");

                    b.HasOne("Collectium.Model.Entity.User", "LastUpadteBy")
                        .WithMany()
                        .HasForeignKey("LastUpadteById");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.StatusAsuransi", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Asuransi");

                    b.Navigation("AsuransiSisaKlaim");

                    b.Navigation("Branch");

                    b.Navigation("BranchPembukuan");

                    b.Navigation("BranchProses");

                    b.Navigation("LastUpadteBy");

                    b.Navigation("Loan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.InsuranceApproval", b =>
                {
                    b.HasOne("Collectium.Model.Entity.RecoveryExecution", "Execution")
                        .WithMany()
                        .HasForeignKey("ExecutionId");

                    b.HasOne("Collectium.Model.Entity.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.HasOne("Collectium.Model.Entity.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Collectium.Model.Entity.Role", "RecipientRole")
                        .WithMany()
                        .HasForeignKey("RecipientRoleId");

                    b.HasOne("Collectium.Model.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Collectium.Model.Entity.Role", "SenderRole")
                        .WithMany()
                        .HasForeignKey("SenderRoleId");

                    b.Navigation("Execution");

                    b.Navigation("Insurance");

                    b.Navigation("Recipient");

                    b.Navigation("RecipientRole");

                    b.Navigation("Sender");

                    b.Navigation("SenderRole");
                });

            modelBuilder.Entity("Collectium.Model.Entity.InsuranceDocument", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Ayda", null)
                        .WithMany("Document")
                        .HasForeignKey("AydaId");

                    b.HasOne("Collectium.Model.Entity.DocumentInsurance", "DocumentInsurance")
                        .WithMany()
                        .HasForeignKey("DocumentInsuranceId");

                    b.HasOne("Collectium.Model.Entity.Insurance", "Insurance")
                        .WithMany("Document")
                        .HasForeignKey("InsuranceId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("DocumentInsurance");

                    b.Navigation("Insurance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Kecamatan", b =>
                {
                    b.HasOne("Collectium.Model.Entity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("City");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Kelurahan", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Kecamatan", "Kecamatan")
                        .WithMany()
                        .HasForeignKey("KecamatanId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Kecamatan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MaritalStatus", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterCollateral", b =>
                {
                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterLoan", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Collectium.Model.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Collectium.Model.Entity.ProductSegment", "ProductSegment")
                        .WithMany()
                        .HasForeignKey("ProductSegmentId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("ProductSegment");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterLoanHistory", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Collectium.Model.Entity.ProductSegment", "ProductSegment")
                        .WithMany()
                        .HasForeignKey("ProductSegmentId");

                    b.Navigation("CallBy");

                    b.Navigation("Customer");

                    b.Navigation("Loan");

                    b.Navigation("Product");

                    b.Navigation("ProductSegment");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Nationality", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.NotifContent", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.NotifContentRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.NotifContent", "NotifContent")
                        .WithMany()
                        .HasForeignKey("NotifContentId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ApprovedUser");

                    b.Navigation("NotifContent");

                    b.Navigation("RequestUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PaymentHistory", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.Navigation("CallBy");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Collectium.Model.Entity.PaymentRecord", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "CallBy")
                        .WithMany()
                        .HasForeignKey("CallById");

                    b.HasOne("Collectium.Model.Entity.CollectionCall", "Call")
                        .WithMany()
                        .HasForeignKey("CallId");

                    b.Navigation("Call");

                    b.Navigation("CallBy");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Permission", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Product", b =>
                {
                    b.HasOne("Collectium.Model.Entity.ProductSegment", "ProductSegment")
                        .WithMany()
                        .HasForeignKey("ProductSegmentId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ProductSegment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ProductSegment", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Provinsi", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Reason", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.ReasonRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.Reason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ApprovedUser");

                    b.Navigation("Reason");

                    b.Navigation("RequestUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Restructure", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApproveBy")
                        .WithMany()
                        .HasForeignKey("ApproveById");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchPembukuan")
                        .WithMany()
                        .HasForeignKey("BranchPembukuanId");

                    b.HasOne("Collectium.Model.Entity.Branch", "BranchProses")
                        .WithMany()
                        .HasForeignKey("BranchProsesId");

                    b.HasOne("Collectium.Model.Entity.User", "CheckBy")
                        .WithMany()
                        .HasForeignKey("CheckById");

                    b.HasOne("Collectium.Model.Entity.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById");

                    b.HasOne("Collectium.Model.Entity.JenisPengurangan", "JenisPengurangan")
                        .WithMany()
                        .HasForeignKey("JenisPenguranganId");

                    b.HasOne("Collectium.Model.Entity.User", "LastUpadteBy")
                        .WithMany()
                        .HasForeignKey("LastUpadteById");

                    b.HasOne("Collectium.Model.Entity.MasterLoan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId");

                    b.HasOne("Collectium.Model.Entity.PembayaranGp", "PembayaranGp")
                        .WithMany()
                        .HasForeignKey("PembayaranGpId");

                    b.HasOne("Collectium.Model.Entity.PolaRestruktur", "PolaRestruktur")
                        .WithMany()
                        .HasForeignKey("PolaRestrukId");

                    b.HasOne("Collectium.Model.Entity.StatusRestruktur", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ApproveBy");

                    b.Navigation("Branch");

                    b.Navigation("BranchPembukuan");

                    b.Navigation("BranchProses");

                    b.Navigation("CheckBy");

                    b.Navigation("CreateBy");

                    b.Navigation("JenisPengurangan");

                    b.Navigation("LastUpadteBy");

                    b.Navigation("Loan");

                    b.Navigation("PembayaranGp");

                    b.Navigation("PolaRestruktur");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureApproval", b =>
                {
                    b.HasOne("Collectium.Model.Entity.RecoveryExecution", "Execution")
                        .WithMany()
                        .HasForeignKey("ExecutionId");

                    b.HasOne("Collectium.Model.Entity.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Collectium.Model.Entity.Role", "RecipientRole")
                        .WithMany()
                        .HasForeignKey("RecipientRoleId");

                    b.HasOne("Collectium.Model.Entity.Restructure", "Restructure")
                        .WithMany()
                        .HasForeignKey("RestructureId");

                    b.HasOne("Collectium.Model.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Collectium.Model.Entity.Role", "SenderRole")
                        .WithMany()
                        .HasForeignKey("SenderRoleId");

                    b.Navigation("Execution");

                    b.Navigation("Recipient");

                    b.Navigation("RecipientRole");

                    b.Navigation("Restructure");

                    b.Navigation("Sender");

                    b.Navigation("SenderRole");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureCashFlow", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Restructure", "Restructure")
                        .WithMany("CashFlow")
                        .HasForeignKey("RestructureId");

                    b.Navigation("Restructure");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RestructureDocument", b =>
                {
                    b.HasOne("Collectium.Model.Entity.DocumentRestruktur", "DocumentResutruktur")
                        .WithMany()
                        .HasForeignKey("DocumentResutrukturId");

                    b.HasOne("Collectium.Model.Entity.Restructure", "Restructure")
                        .WithMany("Document")
                        .HasForeignKey("RestructureId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("DocumentResutruktur");

                    b.Navigation("Restructure");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RfCounter", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RfGlobal", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Role", b =>
                {
                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RolePermission", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Collectium.Model.Entity.RoleRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Team", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.User", "Spv")
                        .WithMany()
                        .HasForeignKey("SpvId");

                    b.Navigation("Area");

                    b.Navigation("Branch");

                    b.Navigation("Spv");
                });

            modelBuilder.Entity("Collectium.Model.Entity.TeamMember", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Collectium.Model.Entity.Team", "Team")
                        .WithMany("Member")
                        .HasForeignKey("TeamId");

                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Token", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Collectium.Model.Entity.TrackingFc", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.User", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserBranch", b =>
                {
                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.StatusGeneral", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany("Branch")
                        .HasForeignKey("UserId");

                    b.Navigation("Branch");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserBranchRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Collectium.Model.Entity.UserBranch", "UserBranch")
                        .WithMany()
                        .HasForeignKey("UserBranchId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Collectium.Model.Entity.UserRequest", null)
                        .WithMany("Branch")
                        .HasForeignKey("UserRequestId");

                    b.Navigation("ApprovedUser");

                    b.Navigation("Branch");

                    b.Navigation("RequestUser");

                    b.Navigation("Status");

                    b.Navigation("User");

                    b.Navigation("UserBranch");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserRequest", b =>
                {
                    b.HasOne("Collectium.Model.Entity.User", "ApprovedUser")
                        .WithMany()
                        .HasForeignKey("ApproveUserId");

                    b.HasOne("Collectium.Model.Entity.User", "RequestUser")
                        .WithMany()
                        .HasForeignKey("RequestUserId");

                    b.HasOne("Collectium.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Collectium.Model.Entity.User", "Spv")
                        .WithMany()
                        .HasForeignKey("SpvId");

                    b.HasOne("Collectium.Model.Entity.StatusRequest", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Collectium.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ApprovedUser");

                    b.Navigation("RequestUser");

                    b.Navigation("Role");

                    b.Navigation("Spv");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Auction", b =>
                {
                    b.Navigation("Document");

                    b.Navigation("DocumentResult");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Ayda", b =>
                {
                    b.Navigation("Document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionAddContact", b =>
                {
                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Collectium.Model.Entity.CollectionHistory", b =>
                {
                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Collectium.Model.Entity.DistributionRule", b =>
                {
                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Insurance", b =>
                {
                    b.Navigation("Document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.MasterLoan", b =>
                {
                    b.Navigation("Call");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Restructure", b =>
                {
                    b.Navigation("CashFlow");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Role", b =>
                {
                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Collectium.Model.Entity.Team", b =>
                {
                    b.Navigation("Member");
                });

            modelBuilder.Entity("Collectium.Model.Entity.User", b =>
                {
                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Collectium.Model.Entity.UserRequest", b =>
                {
                    b.Navigation("Branch");
                });
#pragma warning restore 612, 618
        }
    }
}
